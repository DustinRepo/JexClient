plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    maven { url = 'https://jitpack.io' }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    // https://mvnrepository.com/artifact/org.reflections/reflections
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.10'
    // https://mvnrepository.com/artifact/org.joml/joml
    implementation group: 'org.joml', name: 'joml', version: '1.10.1'

    implementation files('lib/eventmanager-1.0.2.jar')
    implementation files('lib/baritone-1.6.3-dev.jar')
    implementation files('lib/java-discord-rpc-2.0.1-all.jar')
    //so there's two ways to go about implementing Sodium. First is to just modImplementation with like fabricAPI and use jitpack as host
    //modImplementation "com.github.CaffeineMC:sodium-fabric:mc1.16.3-0.1.0"
    //The good part is that you can actually see the code in the IDE and it also loads as a mod in the game
    //but that's also the bad part because if I wanted to update MC versions I would either have to wait for Sodium to also update or leave the fix out sometimes
    //now for the other one which is annoying because local file, but if you delete the "fabric.mod.json" from the jar and use "compile" instead it is just used as a library, still requiring you to put it in your mods folder
    //this is also what I do for baritone
    implementation files('lib/sodium.jar')
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 16
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}
